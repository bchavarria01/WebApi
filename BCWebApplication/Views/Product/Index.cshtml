@model IEnumerable<BCWebApi.Models.Product>

@{
    ViewData["Title"] = "List of products";
}
<br />
<div class="col-md-12" >
    <div class="box box-info">
        <div class="box-header with-border">
            <h3 class="box-title">Products</h3>
        </div>
        <!-- /.box-header -->
        <div class="box-body" id="formulario-creacion">
            <div class="row">
                <div class="col-md-12">
                    <a asp-action="Create" class="btn btn-success" value="Add new product" >Add new product</a>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-12">
                    <table class="table table-bordered table-hover dataTable">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.ProductId)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Name)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.StockQuantity)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Price)
                                </th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ProductId)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Name)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.StockQuantity)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Price)
                                    </td>
                                    <td>
                                        <a asp-action="Edit" asp-route-id="@item.ProductId" class="btn btn-primary"><i class="fa fa-pencil-square-o"></i></a>
                                        <a asp-action="Shop" asp-route-id="@item.ProductId" class="btn btn-warning"><i class="fa fa-cart-plus"></i></a>
                                        <a onclick="deleteProduct(@item.ProductId)" class="btn btn-danger"><i class="fa fa-trash-o"></i></a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <!-- /.row -->
        </div>
        <!-- ./box-body -->
    </div>
    <!-- /.box -->
</div>
<script>
    function deleteProduct(id) {
        const swalWithBootstrapButtons = Swal.mixin({
          customClass: {
            confirmButton: 'btn btn-success',
            cancelButton: 'btn btn-danger'
          },
          buttonsStyling: false
        })

        swalWithBootstrapButtons.fire({
          title: 'Are you sure?',
          text: "You won't be able to revert this!",
          type: 'warning',
          showCancelButton: true,
          confirmButtonText: 'Yes, delete it!',
          cancelButtonText: 'No, cancel!',
          reverseButtons: true
        }).then((result) => {
            if (result.value) {
              $.ajax({
                type:"POST",
                url: "@Url.Action("Delete", "Product")",
                data:{id: id},
                success:function(datos){
                    swalWithBootstrapButtons.fire({
                      title: 'Product deleted',
                      text: "",
                      type: 'success',
                      showCancelButton: false,
                      confirmButtonText: 'Ok! ',
                    }).then((result) => {
                        if (result.value) {
                            location.reload()
                      } else if (
                        /* Read more about handling dismissals below */
                        result.dismiss === Swal.DismissReason.cancel
                      ) {
                        swalWithBootstrapButtons.fire(
                          'Cancelled',
                          'Your imaginary file is safe :)',
                          'error'
                        )
                      }
                    })
                }
            })
          } else if (
            /* Read more about handling dismissals below */
            result.dismiss === Swal.DismissReason.cancel
          ) {
            swalWithBootstrapButtons.fire(
              'Cancelled',
              'Your imaginary file is safe :)',
              'error'
            )
          }
        })
    }
</script>
